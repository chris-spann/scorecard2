name: FE

on: [workflow_dispatch, push]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate_tag.outputs.tag }}
    env:
       DOCKER_BUILDKIT: 1
       COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
    - name: Generate tag
      id: generate_tag
      run: echo "::set-output name=tag::$(echo $RANDOM)"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build frontend
      id: docker_build_frontend
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: "cspanndev/scorecard2-frontend:${{ steps.generate_tag.outputs.tag }}"
        cache-from: type=gha,scope=ci-test-fe
        cache-to: type=gha,mode=max,scope=ci-test-fe
        context: frontend
        load: true

    - name: Image size
      run: docker images scorecard2-frontend:${{ steps.generate_tag.outputs.tag }} --format "{{.Size}}"

  test:
    needs: [build]
    runs-on: ubuntu-latest
    env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
        TAG: ${{ needs.build.outputs.tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run frontend tests
      working-directory: ./frontend
      run: |
        npm install -g yarn
        yarn install --frozen-lockfile
        yarn test --coverage

  push:
    needs: [build, test]
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      TAG: ${{ needs.build.outputs.tag }}

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push image
      run: |
        docker pull cspanndev/scorecard2-frontend:${{ env.TAG }}
        docker tag cspanndev/scorecard2-frontend:${{ env.TAG }} cspanndev/scorecard2-frontend:latest
        docker push cspanndev/scorecard2-frontend:latest

    - name: Cleanup temp image
      run : |
        TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"${{ secrets.DOCKERHUB_USERNAME }}\", \"password\": \"${{ secrets.DOCKERHUB_TOKEN }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
        curl -s -H "Authorization: JWT ${TOKEN}" -X DELETE https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/scorecard2-frontend/tags/${{ env.TAG }}/
